{"ast":null,"code":"export default {\n  data() {\n    return {\n      oldPassword: '',\n      newPassword: '',\n      commitedNewPassword: ''\n    };\n  },\n  methods: {\n    toBack() {\n      this.$router.back();\n    },\n    //TODO:验证用户提交的数据是否正确\n    submit() {\n      console.log(this.oldPassword);\n      //字段检测部分\n      if (this.oldPassword == '') {\n        this.$message({\n          showClose: true,\n          //是否显示关闭按钮\n          message: '旧密码不能为空',\n          type: 'warning',\n          //类型\n          onClose: () => {\n            console.log('关闭');\n          }\n        });\n        return;\n      }\n      if (this.newPassword == '') {\n        this.$message({\n          showClose: true,\n          //是否显示关闭按钮\n          message: '新密码不能为空',\n          type: 'warning',\n          //类型\n          onClose: () => {\n            console.log('关闭');\n          }\n        });\n        return;\n      }\n      if (this.commitedNewPassword == '') {\n        this.$message({\n          showClose: true,\n          //是否显示关闭按钮\n          message: '确认的新密码不能为空',\n          type: 'warning',\n          //类型\n          onClose: () => {\n            console.log('关闭');\n          }\n        });\n        return;\n      }\n      if (this.commitedNewPassword != this.newPassword) {\n        this.$message({\n          showClose: true,\n          //是否显示关闭按钮\n          message: '两次输入的密码不一致！',\n          type: 'warning',\n          //类型\n          onClose: () => {\n            console.log('关闭');\n          }\n        });\n        return;\n      }\n      //TODO：逻辑处理部分\n      // let url = 'users/login';\n      // this.$axios.post(url, this.user).then(response => {\n      //   //登录成功，将登录用户名存储到sessionStorage中\n      //   this.$setSessionStorage('token', response.data.data);\n      //   this.$message({\n      //     showClose: true,//是否显示关闭按钮\n      //     message: '登录操作成功',\n      //     type: 'success',//类型\n      //     onClose: () => {\n      //       this.$router.push({path: '/'}).catch(e => {\n      //       });\n      //     },\n      //   })\n      // }).catch(e => {\n      //   console.log(e);\n      // })\n    }\n  }\n};","map":{"version":3,"names":["data","oldPassword","newPassword","commitedNewPassword","methods","toBack","$router","back","submit","console","log","$message","showClose","message","type","onClose"],"sources":["src/views/UpdatePWD.vue"],"sourcesContent":["<template>\r\n  <!-- 总容器 -->\r\n  <div class=\"wrapper\">\r\n    <header>\r\n      <i class=\"fa fa-angle-left fa-2x\" @click=\"toBack\"></i>\r\n      <p>修改密码</p>\r\n      <div></div>\r\n    </header>\r\n    <div class=\"top-ban\"></div>\r\n    <table>\r\n      <tr>\r\n        <td>旧密码</td>\r\n        <td><input type=\"password\" v-model=\"oldPassword\" placeholder=\"请输入旧密码\"/></td>\r\n      </tr>\r\n      <tr>\r\n        <td>旧密码</td>\r\n        <td><input type=\"password\" v-model=\"oldPassword\" placeholder=\"请输入旧密码\"/></td>\r\n      </tr>\r\n      <tr>\r\n        <td>新密码</td>\r\n        <td><input type=\"password\" v-model=\"newPassword\" placeholder=\"请输入新密码\"/></td>\r\n      </tr>\r\n      <tr>\r\n        <td>确认新密码</td>\r\n        <td><input type=\"password\" v-model=\"commitedNewPassword\" placeholder=\"请再次输入新密码\"/></td>\r\n      </tr>\r\n    </table>\r\n    <div class=\"btn\" @click=\"submit\">完成</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      commitedNewPassword: ''\r\n    }\r\n  },\r\n  methods: {\r\n    toBack() {\r\n      this.$router.back();\r\n    },\r\n    //TODO:验证用户提交的数据是否正确\r\n    submit() {\r\n      console.log(this.oldPassword);\r\n      //字段检测部分\r\n      if (this.oldPassword == '') {\r\n        this.$message({\r\n          showClose: true,//是否显示关闭按钮\r\n          message: '旧密码不能为空',\r\n          type: 'warning',//类型\r\n          onClose: () => {\r\n            console.log('关闭');\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      if (this.newPassword == '') {\r\n        this.$message({\r\n          showClose: true,//是否显示关闭按钮\r\n          message: '新密码不能为空',\r\n          type: 'warning',//类型\r\n          onClose: () => {\r\n            console.log('关闭');\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      if (this.commitedNewPassword == '') {\r\n        this.$message({\r\n          showClose: true,//是否显示关闭按钮\r\n          message: '确认的新密码不能为空',\r\n          type: 'warning',//类型\r\n          onClose: () => {\r\n            console.log('关闭');\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      if (this.commitedNewPassword != this.newPassword) {\r\n        this.$message({\r\n          showClose: true,//是否显示关闭按钮\r\n          message: '两次输入的密码不一致！',\r\n          type: 'warning',//类型\r\n          onClose: () => {\r\n            console.log('关闭');\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      //TODO：逻辑处理部分\r\n      // let url = 'users/login';\r\n      // this.$axios.post(url, this.user).then(response => {\r\n      //   //登录成功，将登录用户名存储到sessionStorage中\r\n      //   this.$setSessionStorage('token', response.data.data);\r\n      //   this.$message({\r\n      //     showClose: true,//是否显示关闭按钮\r\n      //     message: '登录操作成功',\r\n      //     type: 'success',//类型\r\n      //     onClose: () => {\r\n      //       this.$router.push({path: '/'}).catch(e => {\r\n      //       });\r\n      //     },\r\n      //   })\r\n      // }).catch(e => {\r\n      //   console.log(e);\r\n      // })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style src=\"@/assets/css/Register.css\" scoped></style>\r\n<style scoped>\r\n</style>"],"mappings":"AAgCA;EACAA,KAAA;IACA;MACAC,WAAA;MACAC,WAAA;MACAC,mBAAA;IACA;EACA;EACAC,OAAA;IACAC,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACA;IACAC,OAAA;MACAC,OAAA,CAAAC,GAAA,MAAAT,WAAA;MACA;MACA,SAAAA,WAAA;QACA,KAAAU,QAAA;UACAC,SAAA;UAAA;UACAC,OAAA;UACAC,IAAA;UAAA;UACAC,OAAA,EAAAA,CAAA;YACAN,OAAA,CAAAC,GAAA;UACA;QACA;QACA;MACA;MACA,SAAAR,WAAA;QACA,KAAAS,QAAA;UACAC,SAAA;UAAA;UACAC,OAAA;UACAC,IAAA;UAAA;UACAC,OAAA,EAAAA,CAAA;YACAN,OAAA,CAAAC,GAAA;UACA;QACA;QACA;MACA;MACA,SAAAP,mBAAA;QACA,KAAAQ,QAAA;UACAC,SAAA;UAAA;UACAC,OAAA;UACAC,IAAA;UAAA;UACAC,OAAA,EAAAA,CAAA;YACAN,OAAA,CAAAC,GAAA;UACA;QACA;QACA;MACA;MACA,SAAAP,mBAAA,SAAAD,WAAA;QACA,KAAAS,QAAA;UACAC,SAAA;UAAA;UACAC,OAAA;UACAC,IAAA;UAAA;UACAC,OAAA,EAAAA,CAAA;YACAN,OAAA,CAAAC,GAAA;UACA;QACA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}